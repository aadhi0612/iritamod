syntax = "proto3";
package iritamod.identity;

import "identity/identity.proto";
import "gogoproto/gogo.proto";

option go_package = "gitlab.bianjie.ai/irita-pro/iritamod/modules/identity/types";
option (gogoproto.goproto_getters_all)  = false;

// Msg defines the bank Msg service.
service Msg {
    // AddRoles defines a method for adding a role for the operator.
    rpc Create(MsgCreateIdentity) returns (MsgCreateIdentityResponse);

    // RemoveRoles defines a method for removing a role for the operator.
    rpc Update(MsgUpdateIdentity) returns (MsgUpdateIdentityResponse);
}

// MsgCreateIdentity defines a message to create an identity
message MsgCreateIdentity {
    option (gogoproto.equal) = true;

    string id = 1 ;
    PubKeyInfo pub_key = 2 [
                           (gogoproto.moretags) = "yaml:\"pubkey\"",
                           (gogoproto.jsontag)  = "pubkey"
                           ];
    string certificate = 3;
    string credentials = 4;
    string owner       = 5;
}

// MsgCreateIdentityResponse defines the Msg/Create response type.
message MsgCreateIdentityResponse { }

// MsgUpdateIdentity defines a message to update an identity
message MsgUpdateIdentity {
    option (gogoproto.equal) = true;

    string id = 1 ;
    PubKeyInfo pub_key = 2 [
                           (gogoproto.moretags) = "yaml:\"pubkey\"",
                           (gogoproto.jsontag)  = "pubkey"
                           ];
    string certificate = 3;
    string credentials = 4;
    string owner       = 5;
}


// MsgUpdateIdentityResponse defines the Msg/Update response type.
message MsgUpdateIdentityResponse { }